/// <reference lib="webworker" />
/// <reference no-default-lib="true"/>
/// <reference lib="esnext" />

import type { PrecacheEntry } from '@serwist/precaching'
import { cleanupOutdatedCaches, createHandlerBoundToURL, precacheAndRoute } from '@serwist/precaching'
import { NavigationRoute, registerRoute } from '@serwist/routing'

declare let self: ServiceWorkerGlobalScope & {
  __SW_MANIFEST: Array<PrecacheEntry>
}

// Enable navigation preload if it's supported
if (self.registration.navigationPreload) {
  await self.registration.navigationPreload.enable()
}

// Precache all of the assets generated by your build process
precacheAndRoute(self.__SW_MANIFEST || [])

// Clean up old cache versions
cleanupOutdatedCaches()

// Set up App Shell-style routing
const handler = createHandlerBoundToURL('/index.html')
const navigationRoute = new NavigationRoute(handler, {
  denylist: [/^\/_/, /\/[^/?]+\.[^/]+$/],
})
registerRoute(navigationRoute)